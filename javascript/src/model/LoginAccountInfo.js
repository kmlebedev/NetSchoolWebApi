/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {LoginAccountInfoCurrentOrganization} from './LoginAccountInfoCurrentOrganization';
import {LoginAccountInfoOrganizations} from './LoginAccountInfoOrganizations';
import {LoginAccountInfoUser} from './LoginAccountInfoUser';
import {LoginAccountInfoUserRoles} from './LoginAccountInfoUserRoles';

/**
 * The LoginAccountInfo model module.
 * @module model/LoginAccountInfo
 * @version 5.10.63221
 */
export class LoginAccountInfo {
  /**
   * Constructs a new <code>LoginAccountInfo</code>.
   * @alias module:model/LoginAccountInfo
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>LoginAccountInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LoginAccountInfo} obj Optional instance to populate.
   * @return {module:model/LoginAccountInfo} The populated <code>LoginAccountInfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new LoginAccountInfo();
      if (data.hasOwnProperty('activeToken'))
        obj.activeToken = ApiClient.convertToType(data['activeToken'], 'String');
      if (data.hasOwnProperty('secureActiveToken'))
        obj.secureActiveToken = ApiClient.convertToType(data['secureActiveToken'], 'String');
      if (data.hasOwnProperty('currentOrganization'))
        obj.currentOrganization = LoginAccountInfoCurrentOrganization.constructFromObject(data['currentOrganization']);
      if (data.hasOwnProperty('user'))
        obj.user = LoginAccountInfoUser.constructFromObject(data['user']);
      if (data.hasOwnProperty('userRoles'))
        obj.userRoles = LoginAccountInfoUserRoles.constructFromObject(data['userRoles']);
      if (data.hasOwnProperty('organizations'))
        obj.organizations = ApiClient.convertToType(data['organizations'], [LoginAccountInfoOrganizations]);
      if (data.hasOwnProperty('loginTime'))
        obj.loginTime = ApiClient.convertToType(data['loginTime'], 'Date');
      if (data.hasOwnProperty('active'))
        obj.active = ApiClient.convertToType(data['active'], 'Boolean');
      if (data.hasOwnProperty('canLogin'))
        obj.canLogin = ApiClient.convertToType(data['canLogin'], 'Boolean');
      if (data.hasOwnProperty('storeTokens'))
        obj.storeTokens = ApiClient.convertToType(data['storeTokens'], 'Boolean');
      if (data.hasOwnProperty('accessToken'))
        obj.accessToken = ApiClient.convertToType(data['accessToken'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} activeToken
 */
LoginAccountInfo.prototype.activeToken = undefined;

/**
 * @member {String} secureActiveToken
 */
LoginAccountInfo.prototype.secureActiveToken = undefined;

/**
 * @member {module:model/LoginAccountInfoCurrentOrganization} currentOrganization
 */
LoginAccountInfo.prototype.currentOrganization = undefined;

/**
 * @member {module:model/LoginAccountInfoUser} user
 */
LoginAccountInfo.prototype.user = undefined;

/**
 * @member {module:model/LoginAccountInfoUserRoles} userRoles
 */
LoginAccountInfo.prototype.userRoles = undefined;

/**
 * @member {Array.<module:model/LoginAccountInfoOrganizations>} organizations
 */
LoginAccountInfo.prototype.organizations = undefined;

/**
 * @member {Date} loginTime
 */
LoginAccountInfo.prototype.loginTime = undefined;

/**
 * @member {Boolean} active
 */
LoginAccountInfo.prototype.active = undefined;

/**
 * @member {Boolean} canLogin
 */
LoginAccountInfo.prototype.canLogin = undefined;

/**
 * @member {Boolean} storeTokens
 */
LoginAccountInfo.prototype.storeTokens = undefined;

/**
 * @member {String} accessToken
 */
LoginAccountInfo.prototype.accessToken = undefined;

