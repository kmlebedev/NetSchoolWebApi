/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 4.30.43656
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetSchool);
  }
}(this, function(expect, NetSchool) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DiaryLesson', function() {
      beforeEach(function() {
        instance = new NetSchool.DiaryLesson();
      });

      it('should create an instance of DiaryLesson', function() {
        // TODO: update the code to test DiaryLesson
        expect(instance).to.be.a(NetSchool.DiaryLesson);
      });

      it('should have the property classmeetingId (base name: "classmeetingId")', function() {
        // TODO: update the code to test the property classmeetingId
        expect(instance).to.have.property('classmeetingId');
        // expect(instance.classmeetingId).to.be(expectedValueLiteral);
      });

      it('should have the property day (base name: "day")', function() {
        // TODO: update the code to test the property day
        expect(instance).to.have.property('day');
        // expect(instance.day).to.be(expectedValueLiteral);
      });

      it('should have the property _number (base name: "number")', function() {
        // TODO: update the code to test the property _number
        expect(instance).to.have.property('_number');
        // expect(instance._number).to.be(expectedValueLiteral);
      });

      it('should have the property room (base name: "room")', function() {
        // TODO: update the code to test the property room
        expect(instance).to.have.property('room');
        // expect(instance.room).to.be(expectedValueLiteral);
      });

      it('should have the property startTime (base name: "startTime")', function() {
        // TODO: update the code to test the property startTime
        expect(instance).to.have.property('startTime');
        // expect(instance.startTime).to.be(expectedValueLiteral);
      });

      it('should have the property endTime (base name: "endTime")', function() {
        // TODO: update the code to test the property endTime
        expect(instance).to.have.property('endTime');
        // expect(instance.endTime).to.be(expectedValueLiteral);
      });

      it('should have the property subjectName (base name: "subjectName")', function() {
        // TODO: update the code to test the property subjectName
        expect(instance).to.have.property('subjectName');
        // expect(instance.subjectName).to.be(expectedValueLiteral);
      });

      it('should have the property assignments (base name: "assignments")', function() {
        // TODO: update the code to test the property assignments
        expect(instance).to.have.property('assignments');
        // expect(instance.assignments).to.be(expectedValueLiteral);
      });

    });
  });

}));
