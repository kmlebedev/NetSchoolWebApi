/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetSchool);
  }
}(this, function(expect, NetSchool) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MySettings', function() {
      beforeEach(function() {
        instance = new NetSchool.MySettings();
      });

      it('should create an instance of MySettings', function() {
        // TODO: update the code to test MySettings
        expect(instance).to.be.a(NetSchool.MySettings);
      });

      it('should have the property userId (base name: "userId")', function() {
        // TODO: update the code to test the property userId
        expect(instance).to.have.property('userId');
        // expect(instance.userId).to.be(expectedValueLiteral);
      });

      it('should have the property firstName (base name: "firstName")', function() {
        // TODO: update the code to test the property firstName
        expect(instance).to.have.property('firstName');
        // expect(instance.firstName).to.be(expectedValueLiteral);
      });

      it('should have the property lastName (base name: "lastName")', function() {
        // TODO: update the code to test the property lastName
        expect(instance).to.have.property('lastName');
        // expect(instance.lastName).to.be(expectedValueLiteral);
      });

      it('should have the property middleName (base name: "middleName")', function() {
        // TODO: update the code to test the property middleName
        expect(instance).to.have.property('middleName');
        // expect(instance.middleName).to.be(expectedValueLiteral);
      });

      it('should have the property loginName (base name: "loginName")', function() {
        // TODO: update the code to test the property loginName
        expect(instance).to.have.property('loginName');
        // expect(instance.loginName).to.be(expectedValueLiteral);
      });

      it('should have the property birthDate (base name: "birthDate")', function() {
        // TODO: update the code to test the property birthDate
        expect(instance).to.have.property('birthDate');
        // expect(instance.birthDate).to.be(expectedValueLiteral);
      });

      it('should have the property roles (base name: "roles")', function() {
        // TODO: update the code to test the property roles
        expect(instance).to.have.property('roles');
        // expect(instance.roles).to.be(expectedValueLiteral);
      });

      it('should have the property schoolyearId (base name: "schoolyearId")', function() {
        // TODO: update the code to test the property schoolyearId
        expect(instance).to.have.property('schoolyearId');
        // expect(instance.schoolyearId).to.be(expectedValueLiteral);
      });

      it('should have the property windowsAccount (base name: "windowsAccount")', function() {
        // TODO: update the code to test the property windowsAccount
        expect(instance).to.have.property('windowsAccount');
        // expect(instance.windowsAccount).to.be(expectedValueLiteral);
      });

      it('should have the property mobilePhone (base name: "mobilePhone")', function() {
        // TODO: update the code to test the property mobilePhone
        expect(instance).to.have.property('mobilePhone');
        // expect(instance.mobilePhone).to.be(expectedValueLiteral);
      });

      it('should have the property preferedCom (base name: "preferedCom")', function() {
        // TODO: update the code to test the property preferedCom
        expect(instance).to.have.property('preferedCom');
        // expect(instance.preferedCom).to.be(expectedValueLiteral);
      });

      it('should have the property email (base name: "email")', function() {
        // TODO: update the code to test the property email
        expect(instance).to.have.property('email');
        // expect(instance.email).to.be(expectedValueLiteral);
      });

      it('should have the property existsPhoto (base name: "existsPhoto")', function() {
        // TODO: update the code to test the property existsPhoto
        expect(instance).to.have.property('existsPhoto');
        // expect(instance.existsPhoto).to.be(expectedValueLiteral);
      });

      it('should have the property userSettings (base name: "userSettings")', function() {
        // TODO: update the code to test the property userSettings
        expect(instance).to.have.property('userSettings');
        // expect(instance.userSettings).to.be(expectedValueLiteral);
      });

    });
  });

}));
