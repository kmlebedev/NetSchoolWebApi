/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetSchool);
  }
}(this, function(expect, NetSchool) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('LoginAccountInfo', function() {
      beforeEach(function() {
        instance = new NetSchool.LoginAccountInfo();
      });

      it('should create an instance of LoginAccountInfo', function() {
        // TODO: update the code to test LoginAccountInfo
        expect(instance).to.be.a(NetSchool.LoginAccountInfo);
      });

      it('should have the property activeToken (base name: "activeToken")', function() {
        // TODO: update the code to test the property activeToken
        expect(instance).to.have.property('activeToken');
        // expect(instance.activeToken).to.be(expectedValueLiteral);
      });

      it('should have the property secureActiveToken (base name: "secureActiveToken")', function() {
        // TODO: update the code to test the property secureActiveToken
        expect(instance).to.have.property('secureActiveToken');
        // expect(instance.secureActiveToken).to.be(expectedValueLiteral);
      });

      it('should have the property currentOrganization (base name: "currentOrganization")', function() {
        // TODO: update the code to test the property currentOrganization
        expect(instance).to.have.property('currentOrganization');
        // expect(instance.currentOrganization).to.be(expectedValueLiteral);
      });

      it('should have the property user (base name: "user")', function() {
        // TODO: update the code to test the property user
        expect(instance).to.have.property('user');
        // expect(instance.user).to.be(expectedValueLiteral);
      });

      it('should have the property userRoles (base name: "userRoles")', function() {
        // TODO: update the code to test the property userRoles
        expect(instance).to.have.property('userRoles');
        // expect(instance.userRoles).to.be(expectedValueLiteral);
      });

      it('should have the property organizations (base name: "organizations")', function() {
        // TODO: update the code to test the property organizations
        expect(instance).to.have.property('organizations');
        // expect(instance.organizations).to.be(expectedValueLiteral);
      });

      it('should have the property loginTime (base name: "loginTime")', function() {
        // TODO: update the code to test the property loginTime
        expect(instance).to.have.property('loginTime');
        // expect(instance.loginTime).to.be(expectedValueLiteral);
      });

      it('should have the property active (base name: "active")', function() {
        // TODO: update the code to test the property active
        expect(instance).to.have.property('active');
        // expect(instance.active).to.be(expectedValueLiteral);
      });

      it('should have the property canLogin (base name: "canLogin")', function() {
        // TODO: update the code to test the property canLogin
        expect(instance).to.have.property('canLogin');
        // expect(instance.canLogin).to.be(expectedValueLiteral);
      });

      it('should have the property storeTokens (base name: "storeTokens")', function() {
        // TODO: update the code to test the property storeTokens
        expect(instance).to.have.property('storeTokens');
        // expect(instance.storeTokens).to.be(expectedValueLiteral);
      });

      it('should have the property accessToken (base name: "accessToken")', function() {
        // TODO: update the code to test the property accessToken
        expect(instance).to.have.property('accessToken');
        // expect(instance.accessToken).to.be(expectedValueLiteral);
      });

    });
  });

}));
