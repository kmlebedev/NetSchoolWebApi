<?php
/**
 * StudentDiaryInit
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NetSchool
 *
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.35
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * StudentDiaryInit Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StudentDiaryInit implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'studentDiaryInit';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'students' => '\Swagger\Client\Model\StudentDiaryInitStudents[]',
'current_student_id' => 'int',
'week_start' => '\DateTime',
'ya_class' => 'bool',
'ya_class_auth_url' => 'string',
'new_disk_token' => 'string',
'new_disk_was_request' => 'bool',
'ttsu_rl' => 'string',
'external_url' => 'string',
'weight' => 'bool',
'max_mark' => 'int',
'with_la_assigns' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'students' => null,
'current_student_id' => null,
'week_start' => 'date',
'ya_class' => null,
'ya_class_auth_url' => null,
'new_disk_token' => null,
'new_disk_was_request' => null,
'ttsu_rl' => null,
'external_url' => null,
'weight' => null,
'max_mark' => null,
'with_la_assigns' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'students' => 'students',
'current_student_id' => 'currentStudentId',
'week_start' => 'weekStart',
'ya_class' => 'yaClass',
'ya_class_auth_url' => 'yaClassAuthUrl',
'new_disk_token' => 'newDiskToken',
'new_disk_was_request' => 'newDiskWasRequest',
'ttsu_rl' => 'ttsuRl',
'external_url' => 'externalUrl',
'weight' => 'weight',
'max_mark' => 'maxMark',
'with_la_assigns' => 'withLaAssigns'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'students' => 'setStudents',
'current_student_id' => 'setCurrentStudentId',
'week_start' => 'setWeekStart',
'ya_class' => 'setYaClass',
'ya_class_auth_url' => 'setYaClassAuthUrl',
'new_disk_token' => 'setNewDiskToken',
'new_disk_was_request' => 'setNewDiskWasRequest',
'ttsu_rl' => 'setTtsuRl',
'external_url' => 'setExternalUrl',
'weight' => 'setWeight',
'max_mark' => 'setMaxMark',
'with_la_assigns' => 'setWithLaAssigns'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'students' => 'getStudents',
'current_student_id' => 'getCurrentStudentId',
'week_start' => 'getWeekStart',
'ya_class' => 'getYaClass',
'ya_class_auth_url' => 'getYaClassAuthUrl',
'new_disk_token' => 'getNewDiskToken',
'new_disk_was_request' => 'getNewDiskWasRequest',
'ttsu_rl' => 'getTtsuRl',
'external_url' => 'getExternalUrl',
'weight' => 'getWeight',
'max_mark' => 'getMaxMark',
'with_la_assigns' => 'getWithLaAssigns'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['students'] = isset($data['students']) ? $data['students'] : null;
        $this->container['current_student_id'] = isset($data['current_student_id']) ? $data['current_student_id'] : null;
        $this->container['week_start'] = isset($data['week_start']) ? $data['week_start'] : null;
        $this->container['ya_class'] = isset($data['ya_class']) ? $data['ya_class'] : null;
        $this->container['ya_class_auth_url'] = isset($data['ya_class_auth_url']) ? $data['ya_class_auth_url'] : null;
        $this->container['new_disk_token'] = isset($data['new_disk_token']) ? $data['new_disk_token'] : null;
        $this->container['new_disk_was_request'] = isset($data['new_disk_was_request']) ? $data['new_disk_was_request'] : null;
        $this->container['ttsu_rl'] = isset($data['ttsu_rl']) ? $data['ttsu_rl'] : null;
        $this->container['external_url'] = isset($data['external_url']) ? $data['external_url'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['max_mark'] = isset($data['max_mark']) ? $data['max_mark'] : null;
        $this->container['with_la_assigns'] = isset($data['with_la_assigns']) ? $data['with_la_assigns'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets students
     *
     * @return \Swagger\Client\Model\StudentDiaryInitStudents[]
     */
    public function getStudents()
    {
        return $this->container['students'];
    }

    /**
     * Sets students
     *
     * @param \Swagger\Client\Model\StudentDiaryInitStudents[] $students students
     *
     * @return $this
     */
    public function setStudents($students)
    {
        $this->container['students'] = $students;

        return $this;
    }

    /**
     * Gets current_student_id
     *
     * @return int
     */
    public function getCurrentStudentId()
    {
        return $this->container['current_student_id'];
    }

    /**
     * Sets current_student_id
     *
     * @param int $current_student_id current_student_id
     *
     * @return $this
     */
    public function setCurrentStudentId($current_student_id)
    {
        $this->container['current_student_id'] = $current_student_id;

        return $this;
    }

    /**
     * Gets week_start
     *
     * @return \DateTime
     */
    public function getWeekStart()
    {
        return $this->container['week_start'];
    }

    /**
     * Sets week_start
     *
     * @param \DateTime $week_start week_start
     *
     * @return $this
     */
    public function setWeekStart($week_start)
    {
        $this->container['week_start'] = $week_start;

        return $this;
    }

    /**
     * Gets ya_class
     *
     * @return bool
     */
    public function getYaClass()
    {
        return $this->container['ya_class'];
    }

    /**
     * Sets ya_class
     *
     * @param bool $ya_class ya_class
     *
     * @return $this
     */
    public function setYaClass($ya_class)
    {
        $this->container['ya_class'] = $ya_class;

        return $this;
    }

    /**
     * Gets ya_class_auth_url
     *
     * @return string
     */
    public function getYaClassAuthUrl()
    {
        return $this->container['ya_class_auth_url'];
    }

    /**
     * Sets ya_class_auth_url
     *
     * @param string $ya_class_auth_url ya_class_auth_url
     *
     * @return $this
     */
    public function setYaClassAuthUrl($ya_class_auth_url)
    {
        $this->container['ya_class_auth_url'] = $ya_class_auth_url;

        return $this;
    }

    /**
     * Gets new_disk_token
     *
     * @return string
     */
    public function getNewDiskToken()
    {
        return $this->container['new_disk_token'];
    }

    /**
     * Sets new_disk_token
     *
     * @param string $new_disk_token new_disk_token
     *
     * @return $this
     */
    public function setNewDiskToken($new_disk_token)
    {
        $this->container['new_disk_token'] = $new_disk_token;

        return $this;
    }

    /**
     * Gets new_disk_was_request
     *
     * @return bool
     */
    public function getNewDiskWasRequest()
    {
        return $this->container['new_disk_was_request'];
    }

    /**
     * Sets new_disk_was_request
     *
     * @param bool $new_disk_was_request new_disk_was_request
     *
     * @return $this
     */
    public function setNewDiskWasRequest($new_disk_was_request)
    {
        $this->container['new_disk_was_request'] = $new_disk_was_request;

        return $this;
    }

    /**
     * Gets ttsu_rl
     *
     * @return string
     */
    public function getTtsuRl()
    {
        return $this->container['ttsu_rl'];
    }

    /**
     * Sets ttsu_rl
     *
     * @param string $ttsu_rl ttsu_rl
     *
     * @return $this
     */
    public function setTtsuRl($ttsu_rl)
    {
        $this->container['ttsu_rl'] = $ttsu_rl;

        return $this;
    }

    /**
     * Gets external_url
     *
     * @return string
     */
    public function getExternalUrl()
    {
        return $this->container['external_url'];
    }

    /**
     * Sets external_url
     *
     * @param string $external_url external_url
     *
     * @return $this
     */
    public function setExternalUrl($external_url)
    {
        $this->container['external_url'] = $external_url;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return bool
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param bool $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets max_mark
     *
     * @return int
     */
    public function getMaxMark()
    {
        return $this->container['max_mark'];
    }

    /**
     * Sets max_mark
     *
     * @param int $max_mark max_mark
     *
     * @return $this
     */
    public function setMaxMark($max_mark)
    {
        $this->container['max_mark'] = $max_mark;

        return $this;
    }

    /**
     * Gets with_la_assigns
     *
     * @return bool
     */
    public function getWithLaAssigns()
    {
        return $this->container['with_la_assigns'];
    }

    /**
     * Sets with_la_assigns
     *
     * @param bool $with_la_assigns with_la_assigns
     *
     * @return $this
     */
    public function setWithLaAssigns($with_la_assigns)
    {
        $this->container['with_la_assigns'] = $with_la_assigns;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
