/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LoginAccountInfoCurrentOrganization;
import io.swagger.client.model.LoginAccountInfoOrganizations;
import io.swagger.client.model.LoginAccountInfoUser;
import io.swagger.client.model.LoginAccountInfoUserRoles;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * LoginAccountInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-06T08:52:10.951Z[GMT]")
public class LoginAccountInfo {
  @SerializedName("activeToken")
  private String activeToken = null;

  @SerializedName("secureActiveToken")
  private String secureActiveToken = null;

  @SerializedName("currentOrganization")
  private LoginAccountInfoCurrentOrganization currentOrganization = null;

  @SerializedName("user")
  private LoginAccountInfoUser user = null;

  @SerializedName("userRoles")
  private LoginAccountInfoUserRoles userRoles = null;

  @SerializedName("organizations")
  private List<LoginAccountInfoOrganizations> organizations = null;

  @SerializedName("loginTime")
  private LocalDate loginTime = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("canLogin")
  private Boolean canLogin = null;

  @SerializedName("storeTokens")
  private Boolean storeTokens = null;

  @SerializedName("accessToken")
  private String accessToken = null;

  public LoginAccountInfo activeToken(String activeToken) {
    this.activeToken = activeToken;
    return this;
  }

   /**
   * Get activeToken
   * @return activeToken
  **/
  @Schema(description = "")
  public String getActiveToken() {
    return activeToken;
  }

  public void setActiveToken(String activeToken) {
    this.activeToken = activeToken;
  }

  public LoginAccountInfo secureActiveToken(String secureActiveToken) {
    this.secureActiveToken = secureActiveToken;
    return this;
  }

   /**
   * Get secureActiveToken
   * @return secureActiveToken
  **/
  @Schema(description = "")
  public String getSecureActiveToken() {
    return secureActiveToken;
  }

  public void setSecureActiveToken(String secureActiveToken) {
    this.secureActiveToken = secureActiveToken;
  }

  public LoginAccountInfo currentOrganization(LoginAccountInfoCurrentOrganization currentOrganization) {
    this.currentOrganization = currentOrganization;
    return this;
  }

   /**
   * Get currentOrganization
   * @return currentOrganization
  **/
  @Schema(description = "")
  public LoginAccountInfoCurrentOrganization getCurrentOrganization() {
    return currentOrganization;
  }

  public void setCurrentOrganization(LoginAccountInfoCurrentOrganization currentOrganization) {
    this.currentOrganization = currentOrganization;
  }

  public LoginAccountInfo user(LoginAccountInfoUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public LoginAccountInfoUser getUser() {
    return user;
  }

  public void setUser(LoginAccountInfoUser user) {
    this.user = user;
  }

  public LoginAccountInfo userRoles(LoginAccountInfoUserRoles userRoles) {
    this.userRoles = userRoles;
    return this;
  }

   /**
   * Get userRoles
   * @return userRoles
  **/
  @Schema(description = "")
  public LoginAccountInfoUserRoles getUserRoles() {
    return userRoles;
  }

  public void setUserRoles(LoginAccountInfoUserRoles userRoles) {
    this.userRoles = userRoles;
  }

  public LoginAccountInfo organizations(List<LoginAccountInfoOrganizations> organizations) {
    this.organizations = organizations;
    return this;
  }

  public LoginAccountInfo addOrganizationsItem(LoginAccountInfoOrganizations organizationsItem) {
    if (this.organizations == null) {
      this.organizations = new ArrayList<LoginAccountInfoOrganizations>();
    }
    this.organizations.add(organizationsItem);
    return this;
  }

   /**
   * Get organizations
   * @return organizations
  **/
  @Schema(description = "")
  public List<LoginAccountInfoOrganizations> getOrganizations() {
    return organizations;
  }

  public void setOrganizations(List<LoginAccountInfoOrganizations> organizations) {
    this.organizations = organizations;
  }

  public LoginAccountInfo loginTime(LocalDate loginTime) {
    this.loginTime = loginTime;
    return this;
  }

   /**
   * Get loginTime
   * @return loginTime
  **/
  @Schema(description = "")
  public LocalDate getLoginTime() {
    return loginTime;
  }

  public void setLoginTime(LocalDate loginTime) {
    this.loginTime = loginTime;
  }

  public LoginAccountInfo active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(example = "true", description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public LoginAccountInfo canLogin(Boolean canLogin) {
    this.canLogin = canLogin;
    return this;
  }

   /**
   * Get canLogin
   * @return canLogin
  **/
  @Schema(example = "true", description = "")
  public Boolean isCanLogin() {
    return canLogin;
  }

  public void setCanLogin(Boolean canLogin) {
    this.canLogin = canLogin;
  }

  public LoginAccountInfo storeTokens(Boolean storeTokens) {
    this.storeTokens = storeTokens;
    return this;
  }

   /**
   * Get storeTokens
   * @return storeTokens
  **/
  @Schema(example = "true", description = "")
  public Boolean isStoreTokens() {
    return storeTokens;
  }

  public void setStoreTokens(Boolean storeTokens) {
    this.storeTokens = storeTokens;
  }

  public LoginAccountInfo accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Get accessToken
   * @return accessToken
  **/
  @Schema(example = "00168638015429814024329375", description = "")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginAccountInfo loginAccountInfo = (LoginAccountInfo) o;
    return Objects.equals(this.activeToken, loginAccountInfo.activeToken) &&
        Objects.equals(this.secureActiveToken, loginAccountInfo.secureActiveToken) &&
        Objects.equals(this.currentOrganization, loginAccountInfo.currentOrganization) &&
        Objects.equals(this.user, loginAccountInfo.user) &&
        Objects.equals(this.userRoles, loginAccountInfo.userRoles) &&
        Objects.equals(this.organizations, loginAccountInfo.organizations) &&
        Objects.equals(this.loginTime, loginAccountInfo.loginTime) &&
        Objects.equals(this.active, loginAccountInfo.active) &&
        Objects.equals(this.canLogin, loginAccountInfo.canLogin) &&
        Objects.equals(this.storeTokens, loginAccountInfo.storeTokens) &&
        Objects.equals(this.accessToken, loginAccountInfo.accessToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeToken, secureActiveToken, currentOrganization, user, userRoles, organizations, loginTime, active, canLogin, storeTokens, accessToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginAccountInfo {\n");
    
    sb.append("    activeToken: ").append(toIndentedString(activeToken)).append("\n");
    sb.append("    secureActiveToken: ").append(toIndentedString(secureActiveToken)).append("\n");
    sb.append("    currentOrganization: ").append(toIndentedString(currentOrganization)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userRoles: ").append(toIndentedString(userRoles)).append("\n");
    sb.append("    organizations: ").append(toIndentedString(organizations)).append("\n");
    sb.append("    loginTime: ").append(toIndentedString(loginTime)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    canLogin: ").append(toIndentedString(canLogin)).append("\n");
    sb.append("    storeTokens: ").append(toIndentedString(storeTokens)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
