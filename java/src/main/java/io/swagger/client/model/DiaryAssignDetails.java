/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DiaryAssignDetailsAttachments;
import io.swagger.client.model.DiaryAssignDetailsSubjectGroup;
import io.swagger.client.model.DiaryAssignDetailsTeacher;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * DiaryAssignDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-24T12:37:15.210Z[GMT]")
public class DiaryAssignDetails {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("assignmentName")
  private String assignmentName = null;

  @SerializedName("activityName")
  private String activityName = null;

  @SerializedName("problemName")
  private String problemName = null;

  @SerializedName("subjectGroup")
  private DiaryAssignDetailsSubjectGroup subjectGroup = null;

  @SerializedName("teacher")
  private DiaryAssignDetailsTeacher teacher = null;

  @SerializedName("productId")
  private Integer productId = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  @SerializedName("weight")
  private Integer weight = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("attachments")
  private List<DiaryAssignDetailsAttachments> attachments = null;

  @SerializedName("contentElements")
  private List<Object> contentElements = null;

  @SerializedName("codeContentElements")
  private List<Object> codeContentElements = null;

  public DiaryAssignDetails id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "5111111", description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public DiaryAssignDetails assignmentName(String assignmentName) {
    this.assignmentName = assignmentName;
    return this;
  }

   /**
   * Get assignmentName
   * @return assignmentName
  **/
  @Schema(example = "Развитие речи. Сочинение-рассуждение по рассказу «Коллекционная вещь» Тибора Фишера", description = "")
  public String getAssignmentName() {
    return assignmentName;
  }

  public void setAssignmentName(String assignmentName) {
    this.assignmentName = assignmentName;
  }

  public DiaryAssignDetails activityName(String activityName) {
    this.activityName = activityName;
    return this;
  }

   /**
   * Get activityName
   * @return activityName
  **/
  @Schema(example = "nil", description = "")
  public String getActivityName() {
    return activityName;
  }

  public void setActivityName(String activityName) {
    this.activityName = activityName;
  }

  public DiaryAssignDetails problemName(String problemName) {
    this.problemName = problemName;
    return this;
  }

   /**
   * Get problemName
   * @return problemName
  **/
  @Schema(example = "nil", description = "")
  public String getProblemName() {
    return problemName;
  }

  public void setProblemName(String problemName) {
    this.problemName = problemName;
  }

  public DiaryAssignDetails subjectGroup(DiaryAssignDetailsSubjectGroup subjectGroup) {
    this.subjectGroup = subjectGroup;
    return this;
  }

   /**
   * Get subjectGroup
   * @return subjectGroup
  **/
  @Schema(description = "")
  public DiaryAssignDetailsSubjectGroup getSubjectGroup() {
    return subjectGroup;
  }

  public void setSubjectGroup(DiaryAssignDetailsSubjectGroup subjectGroup) {
    this.subjectGroup = subjectGroup;
  }

  public DiaryAssignDetails teacher(DiaryAssignDetailsTeacher teacher) {
    this.teacher = teacher;
    return this;
  }

   /**
   * Get teacher
   * @return teacher
  **/
  @Schema(description = "")
  public DiaryAssignDetailsTeacher getTeacher() {
    return teacher;
  }

  public void setTeacher(DiaryAssignDetailsTeacher teacher) {
    this.teacher = teacher;
  }

  public DiaryAssignDetails productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @Schema(description = "")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public DiaryAssignDetails isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(example = "false", description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public DiaryAssignDetails weight(Integer weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @Schema(example = "10", description = "")
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }

  public DiaryAssignDetails date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public DiaryAssignDetails description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "Задание по рядам - рассуждение по картине. Смотрите прикреплённый файл", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DiaryAssignDetails attachments(List<DiaryAssignDetailsAttachments> attachments) {
    this.attachments = attachments;
    return this;
  }

  public DiaryAssignDetails addAttachmentsItem(DiaryAssignDetailsAttachments attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<DiaryAssignDetailsAttachments>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @Schema(description = "")
  public List<DiaryAssignDetailsAttachments> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<DiaryAssignDetailsAttachments> attachments) {
    this.attachments = attachments;
  }

  public DiaryAssignDetails contentElements(List<Object> contentElements) {
    this.contentElements = contentElements;
    return this;
  }

  public DiaryAssignDetails addContentElementsItem(Object contentElementsItem) {
    if (this.contentElements == null) {
      this.contentElements = new ArrayList<Object>();
    }
    this.contentElements.add(contentElementsItem);
    return this;
  }

   /**
   * Get contentElements
   * @return contentElements
  **/
  @Schema(example = "nil", description = "")
  public List<Object> getContentElements() {
    return contentElements;
  }

  public void setContentElements(List<Object> contentElements) {
    this.contentElements = contentElements;
  }

  public DiaryAssignDetails codeContentElements(List<Object> codeContentElements) {
    this.codeContentElements = codeContentElements;
    return this;
  }

  public DiaryAssignDetails addCodeContentElementsItem(Object codeContentElementsItem) {
    if (this.codeContentElements == null) {
      this.codeContentElements = new ArrayList<Object>();
    }
    this.codeContentElements.add(codeContentElementsItem);
    return this;
  }

   /**
   * Get codeContentElements
   * @return codeContentElements
  **/
  @Schema(example = "nil", description = "")
  public List<Object> getCodeContentElements() {
    return codeContentElements;
  }

  public void setCodeContentElements(List<Object> codeContentElements) {
    this.codeContentElements = codeContentElements;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiaryAssignDetails diaryAssignDetails = (DiaryAssignDetails) o;
    return Objects.equals(this.id, diaryAssignDetails.id) &&
        Objects.equals(this.assignmentName, diaryAssignDetails.assignmentName) &&
        Objects.equals(this.activityName, diaryAssignDetails.activityName) &&
        Objects.equals(this.problemName, diaryAssignDetails.problemName) &&
        Objects.equals(this.subjectGroup, diaryAssignDetails.subjectGroup) &&
        Objects.equals(this.teacher, diaryAssignDetails.teacher) &&
        Objects.equals(this.productId, diaryAssignDetails.productId) &&
        Objects.equals(this.isDeleted, diaryAssignDetails.isDeleted) &&
        Objects.equals(this.weight, diaryAssignDetails.weight) &&
        Objects.equals(this.date, diaryAssignDetails.date) &&
        Objects.equals(this.description, diaryAssignDetails.description) &&
        Objects.equals(this.attachments, diaryAssignDetails.attachments) &&
        Objects.equals(this.contentElements, diaryAssignDetails.contentElements) &&
        Objects.equals(this.codeContentElements, diaryAssignDetails.codeContentElements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, assignmentName, activityName, problemName, subjectGroup, teacher, productId, isDeleted, weight, date, description, attachments, contentElements, codeContentElements);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiaryAssignDetails {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    assignmentName: ").append(toIndentedString(assignmentName)).append("\n");
    sb.append("    activityName: ").append(toIndentedString(activityName)).append("\n");
    sb.append("    problemName: ").append(toIndentedString(problemName)).append("\n");
    sb.append("    subjectGroup: ").append(toIndentedString(subjectGroup)).append("\n");
    sb.append("    teacher: ").append(toIndentedString(teacher)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    contentElements: ").append(toIndentedString(contentElements)).append("\n");
    sb.append("    codeContentElements: ").append(toIndentedString(codeContentElements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
