/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LoginAccountInfo;
import io.swagger.client.model.LoginRequestData;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Login
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-24T12:37:15.210Z[GMT]")
public class Login {
  @SerializedName("at")
  private String at = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("timeOut")
  private Integer timeOut = null;

  @SerializedName("accessToken")
  private String accessToken = null;

  @SerializedName("refreshToken")
  private String refreshToken = null;

  @SerializedName("accountInfo")
  private LoginAccountInfo accountInfo = null;

  @SerializedName("tokenType")
  private String tokenType = null;

  @SerializedName("entryPoint")
  private String entryPoint = null;

  @SerializedName("requestData")
  private LoginRequestData requestData = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  public Login at(String at) {
    this.at = at;
    return this;
  }

   /**
   * Get at
   * @return at
  **/
  @Schema(example = "00168638015429814024329375", description = "")
  public String getAt() {
    return at;
  }

  public void setAt(String at) {
    this.at = at;
  }

  public Login code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Login timeOut(Integer timeOut) {
    this.timeOut = timeOut;
    return this;
  }

   /**
   * Get timeOut
   * @return timeOut
  **/
  @Schema(example = "900000", description = "")
  public Integer getTimeOut() {
    return timeOut;
  }

  public void setTimeOut(Integer timeOut) {
    this.timeOut = timeOut;
  }

  public Login accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Get accessToken
   * @return accessToken
  **/
  @Schema(description = "")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public Login refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Get refreshToken
   * @return refreshToken
  **/
  @Schema(description = "")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public Login accountInfo(LoginAccountInfo accountInfo) {
    this.accountInfo = accountInfo;
    return this;
  }

   /**
   * Get accountInfo
   * @return accountInfo
  **/
  @Schema(description = "")
  public LoginAccountInfo getAccountInfo() {
    return accountInfo;
  }

  public void setAccountInfo(LoginAccountInfo accountInfo) {
    this.accountInfo = accountInfo;
  }

  public Login tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * Get tokenType
   * @return tokenType
  **/
  @Schema(example = "Bearer", description = "")
  public String getTokenType() {
    return tokenType;
  }

  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }

  public Login entryPoint(String entryPoint) {
    this.entryPoint = entryPoint;
    return this;
  }

   /**
   * Get entryPoint
   * @return entryPoint
  **/
  @Schema(example = "/asp/SecurityWarning.asp", description = "")
  public String getEntryPoint() {
    return entryPoint;
  }

  public void setEntryPoint(String entryPoint) {
    this.entryPoint = entryPoint;
  }

  public Login requestData(LoginRequestData requestData) {
    this.requestData = requestData;
    return this;
  }

   /**
   * Get requestData
   * @return requestData
  **/
  @Schema(description = "")
  public LoginRequestData getRequestData() {
    return requestData;
  }

  public void setRequestData(LoginRequestData requestData) {
    this.requestData = requestData;
  }

  public Login errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @Schema(description = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Login login = (Login) o;
    return Objects.equals(this.at, login.at) &&
        Objects.equals(this.code, login.code) &&
        Objects.equals(this.timeOut, login.timeOut) &&
        Objects.equals(this.accessToken, login.accessToken) &&
        Objects.equals(this.refreshToken, login.refreshToken) &&
        Objects.equals(this.accountInfo, login.accountInfo) &&
        Objects.equals(this.tokenType, login.tokenType) &&
        Objects.equals(this.entryPoint, login.entryPoint) &&
        Objects.equals(this.requestData, login.requestData) &&
        Objects.equals(this.errorMessage, login.errorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(at, code, timeOut, accessToken, refreshToken, accountInfo, tokenType, entryPoint, requestData, errorMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Login {\n");
    
    sb.append("    at: ").append(toIndentedString(at)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    timeOut: ").append(toIndentedString(timeOut)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    accountInfo: ").append(toIndentedString(accountInfo)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    entryPoint: ").append(toIndentedString(entryPoint)).append("\n");
    sb.append("    requestData: ").append(toIndentedString(requestData)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
