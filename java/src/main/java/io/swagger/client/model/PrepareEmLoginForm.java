/*
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PrepareEmLoginFormCountries;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PrepareEmLoginForm
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-06T08:52:10.951Z[GMT]")
public class PrepareEmLoginForm {
  @SerializedName("countries")
  private List<PrepareEmLoginFormCountries> countries = null;

  @SerializedName("states")
  private List<PrepareEmLoginFormCountries> states = null;

  @SerializedName("hlevels")
  private List<PrepareEmLoginFormCountries> hlevels = null;

  @SerializedName("ems")
  private List<PrepareEmLoginFormCountries> ems = null;

  @SerializedName("em_cid")
  private Integer emCid = null;

  @SerializedName("em_sid")
  private Integer emSid = null;

  @SerializedName("hlevel")
  private Integer hlevel = null;

  @SerializedName("emId")
  private Integer emId = null;

  public PrepareEmLoginForm countries(List<PrepareEmLoginFormCountries> countries) {
    this.countries = countries;
    return this;
  }

  public PrepareEmLoginForm addCountriesItem(PrepareEmLoginFormCountries countriesItem) {
    if (this.countries == null) {
      this.countries = new ArrayList<PrepareEmLoginFormCountries>();
    }
    this.countries.add(countriesItem);
    return this;
  }

   /**
   * Get countries
   * @return countries
  **/
  @Schema(description = "")
  public List<PrepareEmLoginFormCountries> getCountries() {
    return countries;
  }

  public void setCountries(List<PrepareEmLoginFormCountries> countries) {
    this.countries = countries;
  }

  public PrepareEmLoginForm states(List<PrepareEmLoginFormCountries> states) {
    this.states = states;
    return this;
  }

  public PrepareEmLoginForm addStatesItem(PrepareEmLoginFormCountries statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<PrepareEmLoginFormCountries>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * Get states
   * @return states
  **/
  @Schema(description = "")
  public List<PrepareEmLoginFormCountries> getStates() {
    return states;
  }

  public void setStates(List<PrepareEmLoginFormCountries> states) {
    this.states = states;
  }

  public PrepareEmLoginForm hlevels(List<PrepareEmLoginFormCountries> hlevels) {
    this.hlevels = hlevels;
    return this;
  }

  public PrepareEmLoginForm addHlevelsItem(PrepareEmLoginFormCountries hlevelsItem) {
    if (this.hlevels == null) {
      this.hlevels = new ArrayList<PrepareEmLoginFormCountries>();
    }
    this.hlevels.add(hlevelsItem);
    return this;
  }

   /**
   * Get hlevels
   * @return hlevels
  **/
  @Schema(description = "")
  public List<PrepareEmLoginFormCountries> getHlevels() {
    return hlevels;
  }

  public void setHlevels(List<PrepareEmLoginFormCountries> hlevels) {
    this.hlevels = hlevels;
  }

  public PrepareEmLoginForm ems(List<PrepareEmLoginFormCountries> ems) {
    this.ems = ems;
    return this;
  }

  public PrepareEmLoginForm addEmsItem(PrepareEmLoginFormCountries emsItem) {
    if (this.ems == null) {
      this.ems = new ArrayList<PrepareEmLoginFormCountries>();
    }
    this.ems.add(emsItem);
    return this;
  }

   /**
   * Get ems
   * @return ems
  **/
  @Schema(description = "")
  public List<PrepareEmLoginFormCountries> getEms() {
    return ems;
  }

  public void setEms(List<PrepareEmLoginFormCountries> ems) {
    this.ems = ems;
  }

  public PrepareEmLoginForm emCid(Integer emCid) {
    this.emCid = emCid;
    return this;
  }

   /**
   * Get emCid
   * @return emCid
  **/
  @Schema(description = "")
  public Integer getEmCid() {
    return emCid;
  }

  public void setEmCid(Integer emCid) {
    this.emCid = emCid;
  }

  public PrepareEmLoginForm emSid(Integer emSid) {
    this.emSid = emSid;
    return this;
  }

   /**
   * Get emSid
   * @return emSid
  **/
  @Schema(description = "")
  public Integer getEmSid() {
    return emSid;
  }

  public void setEmSid(Integer emSid) {
    this.emSid = emSid;
  }

  public PrepareEmLoginForm hlevel(Integer hlevel) {
    this.hlevel = hlevel;
    return this;
  }

   /**
   * Get hlevel
   * @return hlevel
  **/
  @Schema(description = "")
  public Integer getHlevel() {
    return hlevel;
  }

  public void setHlevel(Integer hlevel) {
    this.hlevel = hlevel;
  }

  public PrepareEmLoginForm emId(Integer emId) {
    this.emId = emId;
    return this;
  }

   /**
   * Get emId
   * @return emId
  **/
  @Schema(description = "")
  public Integer getEmId() {
    return emId;
  }

  public void setEmId(Integer emId) {
    this.emId = emId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrepareEmLoginForm prepareEmLoginForm = (PrepareEmLoginForm) o;
    return Objects.equals(this.countries, prepareEmLoginForm.countries) &&
        Objects.equals(this.states, prepareEmLoginForm.states) &&
        Objects.equals(this.hlevels, prepareEmLoginForm.hlevels) &&
        Objects.equals(this.ems, prepareEmLoginForm.ems) &&
        Objects.equals(this.emCid, prepareEmLoginForm.emCid) &&
        Objects.equals(this.emSid, prepareEmLoginForm.emSid) &&
        Objects.equals(this.hlevel, prepareEmLoginForm.hlevel) &&
        Objects.equals(this.emId, prepareEmLoginForm.emId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countries, states, hlevels, ems, emCid, emSid, hlevel, emId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrepareEmLoginForm {\n");
    
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    hlevels: ").append(toIndentedString(hlevels)).append("\n");
    sb.append("    ems: ").append(toIndentedString(ems)).append("\n");
    sb.append("    emCid: ").append(toIndentedString(emCid)).append("\n");
    sb.append("    emSid: ").append(toIndentedString(emSid)).append("\n");
    sb.append("    hlevel: ").append(toIndentedString(hlevel)).append("\n");
    sb.append("    emId: ").append(toIndentedString(emId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
