/**
 * NetSchool
 * The API for the NetSchool irTech project
 *
 * OpenAPI spec version: 5.10.63221
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.apis

import io.swagger.client.models.MySettings
import io.swagger.client.models.MySettingsYears

import io.swagger.client.infrastructure.*

class MysettingsApi(basePath: kotlin.String = "https://virtserver.swaggerhub.com/LEBEDEVKM/NetSchool/5.10.63221") : ApiClient(basePath) {

    /**
     * 
     * returns my settings
     * @param at an authorization header 
     * @return MySettings
     */
    @Suppress("UNCHECKED_CAST")
    fun mysettings(at: kotlin.String): MySettings {
        
        val localVariableHeaders: kotlin.collections.Map<kotlin.String, kotlin.String> = mapOf("at" to at)
        val localVariableConfig = RequestConfig(
                RequestMethod.GET,
                "/mysettings", headers = localVariableHeaders
        )
        val response = request<MySettings>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as MySettings
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
    /**
     * 
     * returns all years
     * @param at an authorization header 
     * @return MySettingsYears
     */
    @Suppress("UNCHECKED_CAST")
    fun yearlist(at: kotlin.String): MySettingsYears {
        
        val localVariableHeaders: kotlin.collections.Map<kotlin.String, kotlin.String> = mapOf("at" to at)
        val localVariableConfig = RequestConfig(
                RequestMethod.GET,
                "/mysettings/yearlist", headers = localVariableHeaders
        )
        val response = request<MySettingsYears>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as MySettingsYears
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
}
